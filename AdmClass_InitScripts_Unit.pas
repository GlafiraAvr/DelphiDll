unit AdmClass_InitScripts_Unit;

interface

const

  SCRIPT_S_RIGHTS_CREATE =
    ' /* Generated by IBExpert 08.08.2006 11:11:37*/ ' + #13#10 +
    ' '+ #13#10 +
    ' SET NAMES WIN1251; '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' CREATE GENERATOR GEN_S_RIGHTS_ID; '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                   Tables                                   */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' CREATE TABLE S_RIGHTS ( '+ #13#10 +
    '     ID        INTEGER NOT NULL, '+ #13#10 +
    '     NAME_R    CHAR(40) NOT NULL, '+ #13#10 +
    '     UR_READ   INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_ZAV    INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_RASK   INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_ZADV   INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_POTER  INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_NARAD  INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_ADMIN  INTEGER DEFAULT 0, '+ #13#10 +
    '     UR_DEL  INTEGER DEFAULT 0 '+ #13#10 +
    ' ); '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                Primary Keys                                */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' ALTER TABLE S_RIGHTS ADD CONSTRAINT PK_S_RIGHTS PRIMARY KEY (ID); '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                  Triggers                                  */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' SET TERM ^ ; '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /* Trigger: S_RIGHTS_BI */ '+ #13#10 +
    ' CREATE TRIGGER S_RIGHTS_BI FOR S_RIGHTS '+ #13#10 +
    ' ACTIVE BEFORE INSERT POSITION 0 '+ #13#10 +
    ' AS '+ #13#10 +
    ' BEGIN '+ #13#10 +
    '   IF (NEW.ID IS NULL) THEN '+ #13#10 +
    '     NEW.ID = GEN_ID(GEN_S_RIGHTS_ID,1); '+ #13#10 +
    ' END '+ #13#10 +
    ' ^ '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' SET TERM ; ^ '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                 Privileges                                 */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' COMMIT WORK; ';

  SCRIPT_S_YESNO_CREATE =
    ' /* Generated by IBExpert 08.08.2006 11:09:35*/ '+ #13#10 +
    ' '+ #13#10 +
    ' SET NAMES WIN1251; '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' CREATE GENERATOR GEN_S_YESNO_ID; '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                   Tables                                   */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' CREATE TABLE S_YESNO ( '+ #13#10 +
    '     ID      INTEGER NOT NULL, '+ #13#10 +
    '     NAME_R  CHAR(10) '+ #13#10 +
    ' ); '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                Primary Keys                                */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' ALTER TABLE S_YESNO ADD CONSTRAINT PK_S_YESNO PRIMARY KEY (ID); '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                  Triggers                                  */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' SET TERM ^ ; '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /* Trigger: S_YESNO_BI */ '+ #13#10 +
    ' CREATE TRIGGER S_YESNO_BI FOR S_YESNO '+ #13#10 +
    ' ACTIVE BEFORE INSERT POSITION 0 '+ #13#10 +
    ' AS '+ #13#10 +
    ' BEGIN '+ #13#10 +
    '   IF (NEW.ID IS NULL) THEN '+ #13#10 +
    '     NEW.ID = GEN_ID(GEN_S_YESNO_ID,1); '+ #13#10 +
    ' END '+ #13#10 +
    ' ^ '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' SET TERM ; ^ '+ #13#10 +
    ' '+ #13#10 +
    ' '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' /*                                 Privileges                                 */ '+ #13#10 +
    ' /******************************************************************************/ '+ #13#10 +
    ' '+ #13#10 +
    ' COMMIT WORK; '+ #13#10 +
    ' INSERT INTO S_YESNO (ID,NAME_R) VALUES (0,"мер"); '+ #13#10 +
    ' INSERT INTO S_YESNO (ID,NAME_R) VALUES (1,"дю"); '+ #13#10 +
    ' '+ #13#10 +
    ' COMMIT WORK; ';

implementation

end.
